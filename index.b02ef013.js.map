{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,I,I,E,E,E,U,M,C,I,C,I,E,A,M,S,C,E,C,S,C,E,C,C,E,E,O,I,C,E,C,Y,O,O,qB,E,C,E,E,M,C,O,qB,C,G,M,C,S,C,E,O,O,wB,C,E,G,U,A,G,E,E,O,C,S,C,M,E,E,C,C,E,C,A,K,E,O,c,C,E,E,C,M,E,W,C,E,a,C,E,S,C,C,G,A,C,C,E,C,C,E,C,O,C,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,SAAS,EAAmB,CAAe,EAEzC,IAAI,EAAY,EAAgB,KAAK,CAAC,KAAK,IAAI,CAAC,IAQhD,OAFe,OAHf,EAAY,EAAU,KAAK,CAAC,KAAK,IAAI,CAAC,IAMxC,CAmBA,I,EAhBQ,EA6BF,EAVG,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAHQ,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,EAGvB,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3B,EACE,IAAM,EAAc,EAAA,CAAA,EAAK,EAAE,OAAO,EAAG,MAAM,CACrC,EAAgB,EAAA,CAAA,EAAK,EAAE,OAAO,EAAG,MAAM,CACvC,EAAwB,EAAmB,GAGjD,OAAO,AAFwB,EAAmB,GAElB,CAClC,GA1BM,EAAiB,EAAE,CAEzB,AA6BW,EA7BG,OAAO,CAAC,SAAC,CAAvB,EACE,IAAM,EAAW,CACf,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAA,CAAA,EAAK,EAAK,OAAO,EAAG,QAAQ,CACtC,OAAQ,EAAA,CAAA,EAAK,EAAK,OAAO,EAAG,MAAM,CAClC,IAAK,EAAA,CAAA,EAAK,EAAK,OAAO,EAAG,GAAG,AAC9B,EAEA,EAAe,IAAI,CAAC,EACtB,GAsBF,IAAM,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,SAAS,CAAG,GAEf,EAAW,OAAO,CAAC,SAAC,CAApB,EAEE,IAAM,EAAQ,SAAS,aAAa,CAAC,KAGrC,CAAA,EAAM,WAAW,CAAG,EAAG,WAAW,CAGlC,OAAO,OAAO,CAAC,EAAG,OAAO,EAAE,OAAO,CAAC,SAAnC,CAAA,EAAqC,IAAA,E,A,S,C,E,G,M,O,C,G,O,C,EAAA,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,AAAA,I,E,M,E,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,EAAA,EAAA,I,EAAA,EAAA,I,A,W,M,A,U,6I,IAAA,EAAA,CAAA,CAAA,EAAA,CAAK,EAAL,CAAA,CAAA,EAAA,AACnC,CAAA,EAAM,OAAO,CAAC,EAAI,CAAG,CACvB,GAGA,EAAG,WAAW,CAAC,EACjB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction convertingToNumber(stringToConvert) {\n    // Видаляємо символ долара\n    var numberStr = stringToConvert.split(\"$\").join(\"\");\n    // Видаляємо коми\n    numberStr = numberStr.split(\",\").join(\"\");\n    // Перетворюємо на число\n    var number = Number(numberStr);\n    return number;\n}\nfunction getEmployees(listToConvert) {\n    var employeesArray = [];\n    listToConvert.forEach(function(item) {\n        var employee = {\n            name: item.textContent.trim(),\n            position: _object_spread({}, item.dataset).position,\n            salary: _object_spread({}, item.dataset).salary,\n            age: _object_spread({}, item.dataset).age\n        };\n        employeesArray.push(employee);\n    });\n    return employeesArray;\n}\nvar list = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction sortList(listToSort) {\n    return listToSort.sort(function(a, b) {\n        var firstSalary = _object_spread({}, a.dataset).salary;\n        var secondDataset = _object_spread({}, b.dataset).salary;\n        var normilizedFirstSalary = convertingToNumber(firstSalary);\n        var normilizedSecondSalary = convertingToNumber(secondDataset);\n        return normilizedSecondSalary - normilizedFirstSalary;\n    });\n}\nvar sortedList = sortList(list);\ngetEmployees(sortedList);\nvar ul = document.querySelector(\"ul\");\nul.innerHTML = \"\";\nsortedList.forEach(function(li) {\n    // Створення нового елемента 'li'\n    var newLi = document.createElement(\"li\");\n    // Додавання текстового контенту\n    newLi.textContent = li.textContent;\n    // Додавання всіх data-атрибутів\n    Object.entries(li.dataset).forEach(function(param) {\n        var _param = _sliced_to_array(param, 2), key = _param[0], value = _param[1];\n        newLi.dataset[key] = value;\n    });\n    // Додавання нового 'li' до списку\n    ul.appendChild(newLi);\n});\n\n//# sourceMappingURL=index.b02ef013.js.map\n","'use strict';\n\nfunction convertingToNumber(stringToConvert) {\n  // Видаляємо символ долара\n  let numberStr = stringToConvert.split('$').join('');\n\n  // Видаляємо коми\n  numberStr = numberStr.split(',').join('');\n\n  // Перетворюємо на число\n  const number = Number(numberStr);\n\n  return number;\n}\n\nfunction getEmployees(listToConvert) {\n  const employeesArray = [];\n\n  listToConvert.forEach((item) => {\n    const employee = {\n      name: item.textContent.trim(),\n      position: { ...item.dataset }.position,\n      salary: { ...item.dataset }.salary,\n      age: { ...item.dataset }.age,\n    };\n\n    employeesArray.push(employee);\n  });\n\n  return employeesArray;\n}\n\nconst list = [...document.querySelectorAll('li')];\n\nfunction sortList(listToSort) {\n  return listToSort.sort((a, b) => {\n    const firstSalary = { ...a.dataset }.salary;\n    const secondDataset = { ...b.dataset }.salary;\n    const normilizedFirstSalary = convertingToNumber(firstSalary);\n    const normilizedSecondSalary = convertingToNumber(secondDataset);\n\n    return normilizedSecondSalary - normilizedFirstSalary;\n  });\n}\n\nconst sortedList = sortList(list);\n\ngetEmployees(sortedList);\n\nconst ul = document.querySelector('ul');\n\nul.innerHTML = '';\n\nsortedList.forEach((li) => {\n  // Створення нового елемента 'li'\n  const newLi = document.createElement('li');\n\n  // Додавання текстового контенту\n  newLi.textContent = li.textContent;\n\n  // Додавання всіх data-атрибутів\n  Object.entries(li.dataset).forEach(([key, value]) => {\n    newLi.dataset[key] = value;\n  });\n\n  // Додавання нового 'li' до списку\n  ul.appendChild(newLi);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_object_spread","target","arguments","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","value","defineProperty","configurable","writable","obj","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","convertingToNumber","stringToConvert","numberStr","split","join","Number","employeesArray","sortedList","listToSort","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","_non_iterable_spread","TypeError","sort","a","b","firstSalary","dataset","salary","secondDataset","normilizedFirstSalary","normilizedSecondSalary","listToConvert","item","employee","textContent","trim","position","age","push","ul","querySelector","innerHTML","li","newLi","createElement","entries","param","_param","_array_with_holes","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","next","done","err","_non_iterable_rest","appendChild"],"version":3,"file":"index.b02ef013.js.map"}